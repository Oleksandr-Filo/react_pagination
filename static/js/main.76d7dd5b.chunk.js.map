{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","allPages","Array","fill","map","page","index","className","classNames","disabled","href","onClick","active","items","from","to","numbers","n","push","getNumbers","App","length","useState","setPerPage","setCurrentPage","numberOfTheLastPage","itemsOnTheLasPage","itemsOnPage","_item","firstItemOnPage","slice","indexOf","lastItemOnPage","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAElCM,EAAWC,MAAMJ,GACpBK,KAAK,GACLC,KAAI,SAACC,EAAMC,GAAP,OAAiBD,EAAOC,KAkB/B,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBb,IAHhB,SAME,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QA7BoB,WAC1Bd,EACED,EAAc,EACVA,EAAc,EACdA,IAoBF,oBAWDK,EAASG,KAAI,SAAAC,GAAI,OAChB,oBAEEE,UAAWC,IACT,YACA,CAAEI,OAAQhB,IAAgBS,IAJ9B,SAOE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAI,WAAML,GACVM,QAAS,WACPd,EAAaQ,IALjB,SAQGA,KAdEA,MAmBT,oBACEE,UAAWC,IACT,YACA,CAAEC,SAAUb,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAAed,IAAgBE,EAC/Ba,QA3DoB,WAC1Bd,EACED,EAAcE,EACVF,EAAc,EACdA,IAkDF,wBC9ER,IAAMiB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBf,KAAI,SAAAa,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,IAAM1B,EAAQmB,EAAMQ,OACpB,EAA8BC,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB4B,EAApB,KAEMC,EAAsB1B,KAAKC,KAAKN,EAAQC,GACxC+B,EAAoBhC,EAAQC,GAAWA,EAEvCgC,EAAczB,MAAMY,KACxB,CACEO,OACEI,IAAwB7B,EAAc8B,EAAoB/B,IAG9D,SAACiC,EAAOtB,GAAR,qBAA2BX,EAAUC,EAAcD,EAAUW,EAAQ,MAGjEuB,EAAkBF,EAAY,GACjCG,MAAMH,EAAY,GAAGI,QAAQ,KAAO,GACjCC,EAAiBL,EAAYA,EAAYN,OAAS,GACrDS,MAAMH,EAAY,GAAGI,QAAQ,KAAO,GAWvC,OACE,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiCiC,EADjC,cACsDG,EADtD,eAC2EtC,EAD3E,OAIA,sBAAKa,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOvC,EACPwC,SApBkB,SAACC,GAC3Bb,GAAYa,EAAMC,OAAOH,OACzBV,EAAe,IAaT,UAOE,wBAAQU,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA1Ca,SAACQ,GAClBmB,EAAenB,MA2Cb,6BACGsB,EAAYvB,KAAI,SAAAmC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YE1EnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.76d7dd5b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n\n  const allPages = Array(numberOfPages)\n    .fill(1)\n    .map((page, index) => page + index);\n\n  const handleClickPrevPage = () => {\n    onPageChange(\n      currentPage > 1\n        ? currentPage - 1\n        : currentPage,\n    );\n  };\n\n  const handleClickNextPage = () => {\n    onPageChange(\n      currentPage < numberOfPages\n        ? currentPage + 1\n        : currentPage,\n    );\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handleClickPrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {allPages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: currentPage === page },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === numberOfPages },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === numberOfPages}\n          onClick={handleClickNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const total = items.length;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const numberOfTheLastPage = Math.ceil(total / perPage);\n  const itemsOnTheLasPage = total % perPage || perPage;\n\n  const itemsOnPage = Array.from(\n    {\n      length: (\n        numberOfTheLastPage === currentPage ? itemsOnTheLasPage : perPage\n      ),\n    },\n    (_item, index) => `Item ${(perPage * currentPage - perPage + index + 1)}`,\n  );\n\n  const firstItemOnPage = itemsOnPage[0]\n    .slice(itemsOnPage[0].indexOf(' ') + 1);\n  const lastItemOnPage = itemsOnPage[itemsOnPage.length - 1]\n    .slice(itemsOnPage[0].indexOf(' ') + 1);\n\n  const pageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={pageChange}\n      />\n      <ul>\n        {itemsOnPage.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}